{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"StoTx6qzHJPI"},"outputs":[],"source":["#For MalConv\n","\n","#Create a csv file with the name of each file in the folder with the respective label(0 if benign, 1 if malware)\n","def extraction(path, filecsv): \n","  lista_nomi = []\n","  labels = []\n","\n","  classes = glob.glob(path + '/*')\n","  for i, class_path in enumerate(classes):\n","    class_name = class_path.replace(path + '/*','')\n","    #This loop iterates in whole directory and gets all the feature from the exe files\n","    for sample in tqdm(glob.glob(class_path+'/*'), desc=f'({i+1}\\{len(classes)}) {class_name}'):\n","      lista_nomi.append(sample.split(\"/\")[-2] + '/'+ sample.split(\"/\")[-1])\n","\n","      if(\"benign\" in class_path):\n","        labels.append(0)  #LABLING BENIGN AS 0\n","      else:\n","        labels.append(1) #LABELING EVIL AS 1\n","\n","  k=0\n","  with open(filecsv, 'w') as f:\n","    writer = csv.writer(f, delimiter = ',')\n","    for val in lista_nomi:\n","      writer.writerow([val, labels[k]])\n","      k=k+1"]},{"cell_type":"code","source":["#For Image-Based\n","\n","#Extract byte values from binary executable file and store them into list\n","def getBinaryData(filename): \n","\n","\tbinary_values = []\n","\twith open(filename, 'rb') as fileobject:\n","\t\t# read file byte by byte\n","\t\tdata = fileobject.read(1)\n","\t\twhile data != b'':\n","\t\t\tbinary_values.append(ord(data))\n","\t\t\tdata = fileobject.read(1)\n","\treturn binary_values\n","\n","#Based on the file size it sets the height and width of the image\n","def __get_image_width(file_size):\n","    kb = 1024\n","    if file_size < 10 * kb:\n","        width = 32\n","    if file_size < 30 * kb:\n","        width = 64\n","    if file_size < 60 * kb:\n","        width = 128\n","    if file_size < 100 * kb:\n","        width = 256\n","    if file_size < 200 * kb:\n","        width = 384\n","    if file_size < 500 * kb:\n","        width = 512\n","    if file_size < 1000 * kb:\n","        width = 768\n","    else:\n","        width = 1024\n","    height = int(file_size/width) +1\n","    return (width, height)\n","\n","\n","#We take all the files from a folder and create the png of those files in the scale of gray\n","def bintoimmagini(): \n","    i = 0\n","    classes = glob.glob('/home/mario/Scrivania/test/benign')\n","    for i, class_path in enumerate(classes):\n","        class_name = class_path.replace('/home/mario/Scrivania/test/benign','')\n","    for sample in tqdm(glob.glob(class_path+'/*'), desc=f'({i+1}\\{len(classes)}) {class_name}'):\n","        data = getBinaryData(sample)\n","        size = __get_image_width(len(data))\n","        imagename = Image.new('L', size)\n","        imagename.putdata(data)\n","        imagename.save('/home/mario/Scrivania/test1/' + str(i) + '.png')\n","        i = i+1"],"metadata":{"id":"s-_Hf03jFxSg"},"execution_count":null,"outputs":[]}]}